version: "3.9"

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data

  migrations:
    build:
      context: .
    env_file: .env
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    command: python todolist/manage.py migrate

  api:
    build:
      context: .
    env_file: .env
    environment:
      POSTGRES_HOST: postgres
      DEBUG: false
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./todolist:/app

  front:
    image: sermalenk/skypro-front:lesson-34
    restart: on-failure
    ports:
     - "80:80"
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./todolist/static:/usr/share/nginx/html/static/
