version: "3.9"

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data

  migrations:
    image: ${DOCKER_USERNAME}/todolist:latest
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  api:
    image: ${DOCKER_USERNAME}/todolist:latest
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: python manage.py runserver 0.0.0.0:8000

  front:
    image: sermalenk/skypro-front:lesson-37
    restart: on-failure
    ports:
     - "80:80"
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf