version: "3.9"

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
  migrations:
    image: rizv4n/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      postgres:
        condition: "service_healthy"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 30s
      timeout: 5s
      retries: 5
    command: python manage.py migrate
  api:
    image: rizv4n/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      postgres:
        condition: "service_healthy"
      migrations:
        condition: "service_completed_successfully"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 5s
      retries: 5
  front:
    image: sermalenk/skypro-front:lesson-34
    restart: on-failure
    ports:
     - "80:80"
    depends_on:
      api:
        condition: service_started
